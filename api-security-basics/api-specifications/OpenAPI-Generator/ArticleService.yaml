openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v1
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /articles/{id}:
    get:
      tags:
      - article-controller
      operationId: one
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
          content:
            'application/json':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Article'
    put:
      tags:
      - article-controller
      operationId: replaceEmployee
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Article'
    delete:
      tags:
      - article-controller
      operationId: deleteEmployee
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
  /articles:
    get:
      security:
        - basicAuth: []
      tags:
      - article-controller
      summary: Get all Articles
      description: Returns a list of articles
      operationId: articles
      responses:
        "401":
          description: Unauthorized
        "404":
          description: Not found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: "ok, successful operation"
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
    post:
      tags:
      - article-controller
      operationId: newArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Article'

components:
  securitySchemes:
    basicAuth:     
      type: http
      scheme: basic

  schemas:
    Article:
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
          maximum: 1000
        description:
          type: string
        mail:
          type: string
          format: email
        price:
          type: integer
          format: int64
